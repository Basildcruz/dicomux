########### Requirements ###########

functional
* Visualization of DICOM ECG files
** General ECG Waveform SOP Class (support 3, 6, 12, 15 leads, independent from display format)
** 12-Lead ECG Waveforms SOP Class (12 leads, supports different display formats e.g. 4x2,5s, 2x5s)
** Ability to zoom in on a certain area of the ECG waveform
** Ability to show the exact value of a certain point of the waveforms

* Visualization of DICOM files with encapsulated PDFs
** Ability to zoom in on a certain area of the encapsulated PDF
** The PDF has to be displayed in the DICOM viewer without using an external application.

* Visualization of important patient specific data
** Ability to configure the visibility of certain patient specific values

* Possibility to open more than one file at the same time by using tabs
** Ability to load a whole DICOM directory with one single command
*** this opens one tab for each file
** One file is bound to a single tab
*** it should not be possible to open a certain file multiple times

* Possibility to view all attributes of an opened DICOM file

* There has to be a function in the main menu which opens a new tab and shows information about the application, its creators and its license

* The application may has to provide a plug-in management tool.

non-functional
* Full screen visualization of the data without any disturbing GUI elements
* Customization of the language setting by editing a text file.
* Platform independent implementation
* The user interface has to use the current look and feel of the operating system.

* each functionality has be encapsulated in a certain plug-in
** each plug-in has to provide all necessary functionalities for its own usage
** this includes language information, menu actions, ...
** each plug-in gets DICOM information from the main application and provides special functionalities for that data including functions for displaying the information

GUI specific requirements
* the size of the application window has to be variable
** the minimal size has to be approx. 800 x 600 Pixels
** the application has to work in maximized window mode
** the size of the application window should not change its size if the patient data panel gets expanded or shrinked
* the application has to avoid bringing up popup messages

* the main menu contains all available functions for the currently selected workspace
** there has to be a shortcut for each function of the main menu

* the tabbed workspace has to be used as a multipurpose area
** all information and dialogs should be located in the tabbed workspace
** there should be at least one tab
** after the application has started, the workspace should bring up a welcome message with all possible next steps (open file, open dir,...)
** each tab has to have its own close button
** if the last tab gets closed, a tab with the welcome message will be displayed
** each tab gets a proper name (Welcome, Patient data configuration, File xyz)

* it should be possible to configure which values should be displayed in the patient data panel
** the configuration dialog will be displayed in an own tab of the workspace

* at the first start of the application, the language setting of the operating system will be used as the initial language setting of the application
* the user can change the language setting by selecting the proper menu entry
** the change will take effect after restarting the application

########### Schedule ###########

Sprints
* one sprint is seven days long (monday to sunday)
* July/2nd is the last date for the acceptance test 
* there are 13 weeks remaining
* Daily Scrum Meetings won't be used
* Sprint Review Meetings will be held on every monday at 9:45am
* Sprint Planning Meetings will be held on every monday after the Review Meeting
* The test of the final version of a sprint will be done by one team member at the end of a sprint. The tester reports existing failures in the review meeting. The tester has to test all implemented features.
* Platform independence will be tested by using several virtual machines.

Working packages
* Definition of all compoments used by the DICOM viewer
** MVC design
** class diagram
** compoment diagram
* Design of the user interface
* Implementation of the user interface
** language is customizable
** more than one file can be opened
* Visualization of the attributes of a DICOM file
* Visualization of the patient specific data
* Visualization of an encapsulated document
** Ability to zoom in on a certain area of the PDF
*Visualization of a waveform ECG
** General ECG Waveform SOP Class (support 3, 6, 12, 15 leads, independent from display format)
* Visualization of a waveform ECG
** 12-Lead ECG Waveforms SOP Class (12 leads, supports different display formats e.g. 4x2,5s, 2x5s)
* Visualization of a waveform ECG
** Ability to zoom in on a certain area of the ECG waveform
* Visualization of a waveform ECG
** Ability to show the exact value of a certain point of the waveforms

########### Sprint #0 ###########

Working packages
* Definition of all components used by the DICOM viewer
** MVC design
** class diagram
** component diagram
* Design of the user interface

Schedule
* Begin: April/5th
* End: April/11th

Review meeting
* April/12th
* Conclusion:
** All packages have been mostly completed.
*** We have created a class diagram with MVC architecture. Further more we have created a state diagram which describes the Dicomux work-flow.
*** The user interface has been designed and roughly implemented by using the class diagram.
** The class and state diagram still needs some more attention especially the concrete classes and the plug-in interface.
** The design of the user interface is almost completed. The workflow needs some more refinement. A prototype of the user interface is already available.

########### Sprint #1 ###########

Sprint meeting
* We have to analyze the concrete workflow of the user and update the existing diagrams. This includes the analysis of the user's view.
* In order to revise the user interface we have to include the support of multiple languages. This area has already been analyzed. We just have to design and do the implementation.
* The plug-in interface has to be designed and implemented. For testing purpose, we have to create a simple plug-in for displaying all tags of an opened DICOM file.

Working packages
* workflow analysis
* multilanguage support
* design and implementation of the plug-in interface including the first plug-in

Schedule
* Begin: April/12th
* End: April/18th

Review meeting
* We have analyzed the workflow. (state diagram.dia)
* The user interface supports multiple languages.
* The plug-in interface has been refined. Unfortunately, we aren't having any clue of OSGi or similar plug-in frameworks. There are no plug-in capabilities designed or implemented.

########### Sprint #2 ###########

Sprint meeting
* The user view has to be analyzed in order to verify our previous work. Especially the workflow and the user interface.
* We have to check whether it is realizable for us to implement the plug-in feature. It is important to have a proof of concept before implementing this feature.
* All static dialogs of the user interface and the workflow have to be designed and implemented.

Working packages
* user view analysis (Tobi)
* user interface refinement (Heidi)
* design of the plug-in interface including a proof of concept (Norbert)

Schedule
* Begin: April/19th
* End: April/25th

Review meeting
* The user view has been analyzed properly.
* The static dialogs Welcome, OpenFile, OpenDirectory, About, ErrorOpen have been implemented. The workflow has been implemented too.
* The plug-in feature is not really making progress. There is still no working proof of concept.

########### Sprint #3 ###########

Sprint meeting
* A checklist has to be created in order to verify implemented features.
* JFileChooser has to be localized.
* We have to enable dicomux to open dicom files and display its content.
* Some work has been done on the waveform rendering. This has to be continued.
* There is still no working plug-in concept. We have to create one in this sprint or we have to remove this feature from our todo list.

Working packages
* checklist creation (Tobi)
* JFileChooser localization (Tobi)
* open dicom file and display its content (Heidi, Tobi)
* continue work on the waveform render engine (Norbert)
* deliver a plug-in concept (Norbert)

Schedule
* Begin: April/26th
* End: May/2nd

Review meeting
* A checklist has been created, but it needs some more attention.
* The localization of JFileChooser has been completed for german and english language.
* Dicomux is now able to open dicom files. A plug-in for displaying raw data and a plug-in for encapsulated pdfs have been implemented.
* The plug-in concept didn't make any progress. We decided to suspend this task until the waveform render engine is working properly.
* The work on the waveform engine is in progress.

########### Sprint #4 ###########

Sprint meeting
* Pdf plug-in needs to be extended with a zoom and page switching functionality.
* The code quality of the raw plug-in has to be improved. (exceptions, checks, ...)
* Some work has been done on the waveform rendering. This has to be continued.
* Prof. Dr. Johner needs some diagrams.

Working packages
* extend pdf plug-in (Tobi)
* improve raw plug-in (Heidi)
* continue work on the waveform render engine (Norbert)
* create report for Prof. Dr. Johner (TNH)

Schedule
* Begin: May/3rd
* End: May/9th

Review meeting
* Prof. Dr. Johner got the report; the meeting with him was successful
** He tries to get more Dicom files for testing purposes
* The RawPlugin has been improved and needs no further attention.
* The PDF plug-in has been extended but still needs some more attention.
* The waveform render engine has been included in Dicomux. It's capable of rendering 12 lead ECG.

########### Sprint #5 ###########

Sprint meeting
* Some work has been done on the waveform plug-in. This has to be continued.
* All functions of the PDF plug-in need to be improved.
** page switchers only visible if more than one page
** resize of the application has to be handled properly
** the fit to page function has to work
* The plug-in mechanism has to be improved in order to make sure that the selected plug-in really fits to the file.

Working packages
* improve pdf plug-in (Tobi)
* continue work on the waveform render plug-in (Norbert)
* improve plug-in mechanism (Heidi)

Schedule
* Begin: May/10th
* End: May/16th

Review meeting
* The pdf plug-in is now able to handle hide the page switchers if only one page exists. Further more, the fit to application button works now. (cheap hack)
* The waveform render engine has been included in Dicomux. It's capable of rendering 3,6,9,12,15 lead ECG.
* The plug-in mechanism has been improved. Especially the automatic plug-in selection has been reenigneered.

########### Sprint #6 ###########

Sprint meeting
* Some work has been done on the waveform plug-in. This has to be continued. (display formats)
* All functions of the PDF plug-in need to be improved.
** code cleanup
* The localization has to be improved for the whole application.
* It has to be check how we can integrate the application. Maybe Java Webstart would be nice.
* Dicomux has to learn how to open dicom directories.

Working packages
* continue work on the waveform render plug-in (Norbert)
* design directory mechanism and implement proof of concept (Tobi)
* code cleanup of the PDF plug-in (Tobi)
* improve localization (Heidi)
* design integration (Heidi)

Schedule
* Begin: May/17th
* End: May/30th

Review meeting
* The waveform plug-in has been improved.
* The localization has been improved. (especially the JFileChooser)
* The code of the PDF plug-in still needs to be cleaned up.
* The directory mechanism has been designed and a proof of concept has been implemented.
** This functionality will be improved after this period.
* The integration still needs to be designed.

########### Sprint #7 ###########

Sprint meeting
* Some work has been done on the waveform plug-in. This has to be continued. (display formats)
* The code has to be cleaned up.
* The integration has to be designed. (A jar would be nice)

Working packages
* continue work on the waveform render plug-in (Norbert)
* code clean up (Tobi, Heidi)
* design integration (Heidi, Tobi)

Schedule
* Begin: May/31st
* End: June/6th

Review meeting
* The waveform plug-in has been improved. (the scale of mV now depends on the global min and max)
* A code base wide clean up has been started and isn't finished yet.
* The integration still needs to be designed.

########### Sprint #8 ###########

Sprint meeting
* Some work has been done on the waveform plug-in. This has to be continued. (bugfix / display formats)
* We need a technical manual and a user manual. (Latex - English as usual)
* The integration has to be designed. (A jar would be nice)

Working packages
* continue work on the waveform render plug-in (Norbert)
* technical manual and user manual (Tobi, Heidi)
* design integration (Heidi, Tobi)

Schedule
* Begin: June/7th
* End: June/13th

Review meeting
* The integration still needs to be designed. (attempts failed)
* The waveform plug-in has been improved. (display format first design and implementation)
* PDF lib has been changed - we currently got a new zoom function and lost an old zoom function

########### Sprint #9 ###########

Sprint meeting
* Some work has been done on the waveform plug-in. This has to be continued. (display formats / language)
* We need a technical manual. (Latex - English as usual)
** architecture
** description
** class diagram
* The integration has to be designed. (as jar)

Working packages
* continue work on the waveform render plug-in (Norbert)
* technical manual (Heidi)
* implement welcome and about tabs (Tobi)
* do integration (Tobi)

Schedule
* Begin: June/14th
* End: June/20th

Review meeting
* integration possible and running
** access on resources only with getResource()
** resources have to be copied into the src/ directory
* technical manual has been created
** class diagramm is missing
* waveform plugin is still under construction

########### Sprint #A ###########

Sprint meeting
* Some work has been done on the waveform plug-in. This has to be continued. (display formats / language)
* We need a technical manual. (Latex - English as usual)
** class diagram
** JavaDoc export
* implement welcome and about tabs
* RawPlugin redesign of the buttons
* User manual creation
** with screenshots

Working packages
* continue work on the waveform render plug-in (Norbert)
* technical manual javadoc (Heidi)
* user manual without waveform plugin (Tobi)
* RawPlugin (Heidi)
* tabs welcome / about (Heidi)

Schedule
* Begin: June/21st
* End: June/27th

Review meeting
